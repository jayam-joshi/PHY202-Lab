Demonstration:

1. Find the machine precession for 16, 32 and 64 bit floating point numbers
   for np.float32 and np.float64 representations. The program should also
   tell you what is the size of mantisa for these representations.

2. What are the highest and lowest integers  8, 16, 32, 64 bit integers can
   represent? Calculate this first by hand.

   Write a program that can find the highest and lowest integers for numpy
   representations of 8, 16, 32 and 64 bit integers.


Class Assignment:

1. Write a function that can find the binary representation of a fractional
   number to N significant digits. 

2. Write a function that can find the float32 representation of 
   a fractional number.


Home work problem:

1. Write a program that can calculate exp(x) by using its power series
   expansion. Your program should use numpy.float16 for the floating
   point numbers. Find how the absolute and relative truncation error
   change as a function of the number of terms you keep in the series to
   estimate the value of exp(x) for x = +/-1., +/-0.1, +/-0.01, +/-0.001.
   You can use a python module to find the expression of exp(x) that have a
   better machine precession than that of np.float16. Plot the absolute and
   relative errors as a function of number of terms you keep in a log-log plot.

2. Repeat above exercise with sin(x) and cos(x).

3. Write a function that can do exercise 1 for any function f(x).
   [You can consult tutors to know how to take a function as input]

